{"ast":null,"code":"var _jsxFileName = \"/Users/wesleywood/Documents/Coding-Projects/react-weather-app/weather-app/src/App.js\";\nimport './App.css';\nimport Weather from './app_component/weather.component';\nimport React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'weather-icons/css/weather-icons.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = '541a6fd6349d856e50d4aa778147f56f';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.getWeather = async () => {\n      const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=London,uk&appid=${API_KEY}`);\n      const response = await api_call.json();\n      console.log(response);\n      this.setState({\n        city: response.name,\n        country: response.sys.country,\n        celsius: this.calCelsius(response.main.temp),\n        temp_max: this.calCelsius(response.main.temp_max),\n        temp_min: this.calCelsius(response.main.temp_min),\n        description: response.weather[0].description\n      });\n      this.get_WeatherIcon();\n    };\n\n    this.state = {\n      city: undefined,\n      country: undefined,\n      icon: undefined,\n      main: undefined,\n      celsius: undefined,\n      temp_max: undefined,\n      temp_min: undefined,\n      description: \"\",\n      error: false\n    };\n    this.getWeather();\n    this.weatherIcon = {\n      Thunderstorm: 'wi-thunderstorm',\n      Drizzle: 'wi-sleet',\n      Rain: 'wi-storm-shower',\n      Snow: 'wi-snow',\n      Atmosphere: 'wi-fog',\n      Clear: 'wi-day-sunny',\n      Clouds: 'wi-day-fog'\n    };\n  }\n\n  calCelsius(temp) {\n    let cel = Math.floor(temp - 273.15);\n    return cel;\n  }\n\n  get_WeatherIcon(icons, rangeId) {\n    switch (true) {\n      case rangeId >= 200 && rangeId <= 232:\n        this.setState({\n          icon: this.weatherIcon.Thunderstorm\n        });\n        break;\n\n      case rangeId >= 300 && rangeId <= 321:\n        this.setState({\n          icon: this.weatherIcon.Drizzle\n        });\n        break;\n\n      case rangeId >= 500 && rangeId <= 532:\n        this.setState({\n          icon: this.weatherIcon.Rain\n        });\n        break;\n\n      case rangeId >= 600 && rangeId <= 622:\n        this.setState({\n          icon: this.weatherIcon.Snow\n        });\n        break;\n\n      case rangeId >= 701 && rangeId <= 281:\n        this.setState({\n          icon: this.weatherIcon.Atmosphere\n        });\n        break;\n\n      case rangeId === 800:\n        this.setState({\n          icon: this.weatherIcon.Clear\n        });\n        break;\n\n      case rangeId >= 801 && rangeId <= 804:\n        this.setState({\n          icon: this.weatherIcon.Clouds\n        });\n        break;\n\n      default:\n        this.setState({\n          icon: this.weatherIcon.Clouds\n        });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Weather, {\n        city: this.state.city,\n        country: this.state.country,\n        temp_celsius: this.state.celsius,\n        temp_max: this.state.temp_max,\n        temp_min: this.state.temp_min,\n        description: this.state.description,\n        weatherIcon: this.state.icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/wesleywood/Documents/Coding-Projects/react-weather-app/weather-app/src/App.js"],"names":["Weather","React","Component","API_KEY","App","constructor","getWeather","api_call","fetch","response","json","console","log","setState","city","name","country","sys","celsius","calCelsius","main","temp","temp_max","temp_min","description","weather","get_WeatherIcon","state","undefined","icon","error","weatherIcon","Thunderstorm","Drizzle","Rain","Snow","Atmosphere","Clear","Clouds","cel","Math","floor","icons","rangeId","render"],"mappings":"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","sourcesContent":["import './App.css';\nimport Weather from './app_component/weather.component'\nimport React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'weather-icons/css/weather-icons.css'\n\nconst API_KEY = '541a6fd6349d856e50d4aa778147f56f'\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      city: undefined,\n      country: undefined,\n      icon: undefined,\n      main: undefined,\n      celsius: undefined,\n      temp_max: undefined,\n      temp_min: undefined,\n      description:\"\",\n      error: false,\n    };\n    this.getWeather();\n    this.weatherIcon = {\n      Thunderstorm:'wi-thunderstorm',\n      Drizzle: 'wi-sleet',\n      Rain: 'wi-storm-shower',\n      Snow: 'wi-snow',\n      Atmosphere:'wi-fog',\n      Clear: 'wi-day-sunny',\n      Clouds: 'wi-day-fog',\n    }\n  }\n\n  calCelsius(temp) {\n    let cel = Math.floor(temp - 273.15)\n    return cel\n  }\n\n  get_WeatherIcon(icons, rangeId) {\n    switch(true) {\n      case rangeId >= 200 && rangeId <= 232:\n        this.setState({icon:this.weatherIcon.Thunderstorm})\n        break;\n      case rangeId >= 300 && rangeId <= 321:\n        this.setState({icon:this.weatherIcon.Drizzle})\n        break;\n      case rangeId >= 500 && rangeId <= 532:\n        this.setState({icon:this.weatherIcon.Rain})\n        break;\n      case rangeId >= 600 && rangeId <= 622:\n        this.setState({icon:this.weatherIcon.Snow})\n        break;\n      case rangeId >= 701 && rangeId <= 281:\n        this.setState({icon:this.weatherIcon.Atmosphere})\n      break;\n      case rangeId === 800:\n        this.setState({icon:this.weatherIcon.Clear})\n      break;\n      case rangeId >= 801 && rangeId <= 804:\n        this.setState({icon:this.weatherIcon.Clouds})\n      break;\n      default:\n        this.setState({icon:this.weatherIcon.Clouds})\n\n    }\n  }\n\n  getWeather = async () => {\n    const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=London,uk&appid=${API_KEY}`)\n    const response = await api_call.json();\n    console.log(response)\n    this.setState({\n      city: response.name,\n      country: response.sys.country,\n      celsius: this.calCelsius(response.main.temp),\n      temp_max: this.calCelsius(response.main.temp_max),\n      temp_min: this.calCelsius(response.main.temp_min),\n      description: response.weather[0].description,\n      \n    })\n    this.get_WeatherIcon()\n  }\n\n  render() {\n    return(\n    <div className=\"App\">\n      <Weather \n      city={this.state.city} \n      country={this.state.country} \n      temp_celsius={this.state.celsius} \n      temp_max={this.state.temp_max}\n      temp_min={this.state.temp_min}\n      description={this.state.description}\n      weatherIcon={this.state.icon}/>\n    </div>\n    );\n  }\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}