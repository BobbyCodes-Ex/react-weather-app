{"ast":null,"code":"var _jsxFileName = \"/Users/wesleywood/Documents/Coding-Projects/react-weather-app/weather-app/src/App.js\";\nimport './App.css';\nimport Weather from './app_component/weather.component';\nimport React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'weather-icons/css/weather-icons.css';\nimport Form from './app_component/form.component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = '541a6fd6349d856e50d4aa778147f56f';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.getWeather = async e => {\n      e.preventDefault();\n      const city = e.target.elements.city.value;\n      const country = e.target.elements.country.value;\n\n      if (city && country) {\n        const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_KEY}`);\n        const response = await api_call.json();\n        console.log(response);\n        this.setState({\n          city: `${response.name}, ${response.sys.country}`,\n          celsius: this.calCelsius(response.main.temp),\n          temp_max: this.calCelsius(response.main.temp_max),\n          temp_min: this.calCelsius(response.main.temp_min),\n          description: response.weather[0].description\n        });\n        this.get_WeatherIcon(this.weatherIcon, response.weather[0].id);\n      } else {\n        this.setState({\n          error: true\n        });\n      }\n    };\n\n    this.state = {\n      city: undefined,\n      country: undefined,\n      icon: undefined,\n      main: undefined,\n      celsius: undefined,\n      fahrenheit: undefined,\n      temp_max: undefined,\n      temp_min: undefined,\n      description: \"\",\n      error: false\n    };\n    this.weatherIcon = {\n      Thunderstorm: 'wi-thunderstorm',\n      Drizzle: 'wi-sleet',\n      Rain: 'wi-storm-shower',\n      Snow: 'wi-snow',\n      Atmosphere: 'wi-fog',\n      Clear: 'wi-day-sunny',\n      Clouds: 'wi-day-fog'\n    };\n  }\n\n  calCelsius(temp) {\n    let cel = Math.floor(temp - 273.15);\n    return cel;\n  }\n\n  calFahrenheit(temp) {\n    let fah = Math.floor((temp - 273.15) * 9 / 5 + 32);\n    return fah;\n  }\n\n  get_WeatherIcon(icons, rangeId) {\n    switch (true) {\n      case rangeId >= 200 && rangeId <= 232:\n        this.setState({\n          icon: this.weatherIcon.Thunderstorm\n        });\n        break;\n\n      case rangeId >= 300 && rangeId <= 321:\n        this.setState({\n          icon: this.weatherIcon.Drizzle\n        });\n        break;\n\n      case rangeId >= 500 && rangeId <= 532:\n        this.setState({\n          icon: this.weatherIcon.Rain\n        });\n        break;\n\n      case rangeId >= 600 && rangeId <= 622:\n        this.setState({\n          icon: this.weatherIcon.Snow\n        });\n        break;\n\n      case rangeId >= 701 && rangeId <= 281:\n        this.setState({\n          icon: this.weatherIcon.Atmosphere\n        });\n        break;\n\n      case rangeId === 800:\n        this.setState({\n          icon: this.weatherIcon.Clear\n        });\n        break;\n\n      case rangeId >= 801 && rangeId <= 804:\n        this.setState({\n          icon: this.weatherIcon.Clouds\n        });\n        break;\n\n      default:\n        this.setState({\n          icon: this.weatherIcon.Clouds\n        });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        loadweather: this.getWeather,\n        error: this.state.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Weather, {\n        city: this.state.city,\n        country: this.state.country,\n        temp_celsius: this.state.celsius,\n        temp_max: this.state.temp_max,\n        temp_min: this.state.temp_min,\n        description: this.state.description,\n        weatherIcon: this.state.icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/wesleywood/Documents/Coding-Projects/react-weather-app/weather-app/src/App.js"],"names":["Weather","React","Component","Form","API_KEY","App","constructor","getWeather","e","preventDefault","city","target","elements","value","country","api_call","fetch","response","json","console","log","setState","name","sys","celsius","calCelsius","main","temp","temp_max","temp_min","description","weather","get_WeatherIcon","weatherIcon","id","error","state","undefined","icon","fahrenheit","Thunderstorm","Drizzle","Rain","Snow","Atmosphere","Clear","Clouds","cel","Math","floor","calFahrenheit","fah","icons","rangeId","render"],"mappings":"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","sourcesContent":["import './App.css';\nimport Weather from './app_component/weather.component'\nimport React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'weather-icons/css/weather-icons.css'\nimport Form from './app_component/form.component'\n\nconst API_KEY = '541a6fd6349d856e50d4aa778147f56f'\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      city: undefined,\n      country: undefined,\n      icon: undefined,\n      main: undefined,\n      celsius: undefined,\n      fahrenheit: undefined,\n      temp_max: undefined,\n      temp_min: undefined,\n      description:\"\",\n      error: false,\n    };\n    this.weatherIcon = {\n      Thunderstorm:'wi-thunderstorm',\n      Drizzle: 'wi-sleet',\n      Rain: 'wi-storm-shower',\n      Snow: 'wi-snow',\n      Atmosphere:'wi-fog',\n      Clear: 'wi-day-sunny',\n      Clouds: 'wi-day-fog',\n    }\n  }\n\n  calCelsius(temp) {\n    let cel = Math.floor(temp - 273.15)\n    return cel\n  }\n\n  calFahrenheit(temp) {\n    let fah = Math.floor((temp - 273.15) * 9/5 + 32)\n    return fah\n  }\n\n  get_WeatherIcon(icons, rangeId) {\n    switch(true) {\n      case rangeId >= 200 && rangeId <= 232:\n        this.setState({icon:this.weatherIcon.Thunderstorm})\n        break;\n      case rangeId >= 300 && rangeId <= 321:\n        this.setState({icon:this.weatherIcon.Drizzle})\n        break;\n      case rangeId >= 500 && rangeId <= 532:\n        this.setState({icon:this.weatherIcon.Rain})\n        break;\n      case rangeId >= 600 && rangeId <= 622:\n        this.setState({icon:this.weatherIcon.Snow})\n        break;\n      case rangeId >= 701 && rangeId <= 281:\n        this.setState({icon:this.weatherIcon.Atmosphere})\n      break;\n      case rangeId === 800:\n        this.setState({icon:this.weatherIcon.Clear})\n      break;\n      case rangeId >= 801 && rangeId <= 804:\n        this.setState({icon:this.weatherIcon.Clouds})\n      break;\n      default:\n        this.setState({icon:this.weatherIcon.Clouds})\n\n    }\n  }\n\n  getWeather = async (e) => {\n    e.preventDefault();\n\n    const city = e.target.elements.city.value;\n    const country = e.target.elements.country.value;\n\n    if (city && country) {\n      const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_KEY}`)\n      const response = await api_call.json();\n      console.log(response)\n      this.setState({\n      city: `${response.name}, ${response.sys.country}`,\n      celsius: this.calCelsius(response.main.temp),\n      temp_max: this.calCelsius(response.main.temp_max),\n      temp_min: this.calCelsius(response.main.temp_min),\n      description: response.weather[0].description,\n      \n    })\n    this.get_WeatherIcon(this.weatherIcon, response.weather[0].id)\n    } else {\n      this.setState({error:true})\n    }\n  }\n\n  render() {\n    return(\n    <div className=\"App\">\n      <Form loadweather = {this.getWeather} error={this.state.error}/>\n      <Weather \n      city={this.state.city} \n      country={this.state.country} \n      temp_celsius={this.state.celsius} \n      temp_max={this.state.temp_max}\n      temp_min={this.state.temp_min}\n      description={this.state.description}\n      weatherIcon={this.state.icon}/>\n    </div>\n    );\n  }\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}